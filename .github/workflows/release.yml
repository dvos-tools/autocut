name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Create release archive
      run: |
        tar -czf autocut-${{ github.ref_name }}.tar.gz \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='dist' \
          --exclude='.github' \
          .
    
    - name: Calculate SHA256
      run: echo "SHA256=$(shasum -a 256 autocut-${{ github.ref_name }}.tar.gz | cut -d' ' -f1)" >> $GITHUB_ENV
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: autocut-${{ github.ref_name }}.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Output SHA256 for next job
      run: echo "${{ env.SHA256 }}" > sha256.txt
    
    - name: Upload SHA256 artifact
      uses: actions/upload-artifact@v4
      with:
        name: sha256
        path: sha256.txt

  update-tap:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/homebrew-autocut
        token: ${{ secrets.TAP_TOKEN }}
    
    - name: Download SHA256
      uses: actions/download-artifact@v4
      with:
        name: sha256
        path: .
    
    - name: Read SHA256
      run: echo "SHA256=$(cat sha256.txt)" >> $GITHUB_ENV
    
    - name: Update formula
      run: |
        # Extract version from tag (remove 'v' prefix)
        VERSION=${GITHUB_REF#refs/tags/v}
        
        # Read SHA256 from file
        SHA256_VALUE=$(cat sha256.txt)
        
        echo "Updating formula to version: $VERSION"
        echo "SHA256: $SHA256_VALUE"
        
        # Create the new formula content
        cat > Formula/autocut.rb << EOF
        class Autocut < Formula
          desc "A background service for running shortcuts on schedule"
          homepage "https://github.com/dvos-tools/autocut"
          version "$VERSION"
          
          url "https://github.com/${{ github.repository }}/releases/download/v$VERSION/autocut-v$VERSION.tar.gz"
          sha256 "$SHA256_VALUE"
          
          depends_on "node@22"
          depends_on "gum"
          
          def install
            # Install dependencies
            system "npm", "install"
            
            # Build the application
            system "npm", "run", "build"
            
            # Create libexec directory and copy built files
            libexec.install "dist"
            libexec.install "config.yml" if File.exist?("config.yml")
            
            # Create log directory
            (var/"log").mkpath
            
            # Make setup script executable and install it
            chmod 0755, "setup-config.sh"
            bin.install "setup-config.sh" => "autocut-setup"
          end
          
          def post_install
            # Create default config if it doesn't exist
            unless File.exist?("#{libexec}/config.yml")
              system "#{bin}/autocut-setup"
            end
          end
          
          service do
            run ["#{HOMEBREW_PREFIX}/bin/node", opt_libexec/"dist/app.js"]
            working_dir opt_libexec
            log_path var/"log/autocut.log"
            error_log_path var/"log/autocut.error.log"
            environment_variables NODE_ENV: "production"
          end
          
          test do
            system "#{bin}/autocut-setup", "--help"
          end
        end
        EOF
        
        echo "Formula updated. Current content:"
        cat Formula/autocut.rb
    
    - name: Commit and push changes
      run: |
        # Clean up temporary files
        rm -f sha256.txt
        
        # Configure git with the actual user
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        
        # Check git status
        echo "Git status before adding:"
        git status
        
        # Add only the formula file
        git add Formula/autocut.rb
        
        # Check git status after adding
        echo "Git status after adding:"
        git status
        
        # Commit and push (only if there are changes)
        if git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update autocut to ${{ github.ref_name }}"
          git push
        fi 